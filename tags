!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/dev/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/9873a6b5/
["<S-Tab>"]	lua/plugins/lspneovim.lua	/^		["<S-Tab>"] = cmp.mapping(function(fallback)$/;"	f
["<Tab>"]	lua/plugins/lspneovim.lua	/^		["<Tab>"] = cmp.mapping(function(fallback)$/;"	f
['<S-Tab>']	lua/plugins/tabnine.lua	/^    ['<S-Tab>'] = function(fallback)$/;"	f
['<Tab>']	lua/plugins/tabnine.lua	/^    ['<Tab>'] = function(fallback)$/;"	f
_find_files	lua/functions.lua	/^function _find_files()$/;"	f
before	lua/plugins/configs/lsp-config/cmpconfiglua.lua	/^      before = function (entry, vim_item)$/;"	f
close_command	lua/plugins/configs/bufferline.lua	/^    close_command = "bdelete! %d",       -- can be a string | function, see "Mouse actions"$/;"	f
config	lua/plugins/plugins.lua	/^        config = function()$/;"	f
config	lua/plugins/plugins.lua	/^   config = function()$/;"	f
config_nvim	lua/functions.lua	/^function config_nvim()$/;"	f
custom_filter	lua/plugins/configs/bufferline.lua	/^    custom_filter = function(buf_number, buf_numbers)$/;"	f
diagnostics_indicator	lua/plugins/configs/bufferline.lua	/^    diagnostics_indicator = function(count, level, diagnostics_dict, context)$/;"	f
diagnostics_indicator	lua/plugins/configs/bufferline.lua	/^diagnostics_indicator = function(count, level, diagnostics_dict, context)$/;"	f
error_msg	plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
expand	lua/plugins/configs/cmpconfig.lua	/^      expand = function(args)$/;"	f
expand	lua/plugins/lspneovim.lua	/^		expand = function(args)$/;"	f
expand	lua/plugins/tabnine.lua	/^    expand = function(args)$/;"	f
format	lua/plugins/tabnine.lua	/^    format = function(entry, vim_item)$/;"	f
get_extension	lua/tools.lua	/^function get_extension( var ) -- recebe o argumento para a vari√°vel$/;"	f
has_any_words_before	lua/plugins/tabnine.lua	/^local has_any_words_before = function()$/;"	f
left_mouse_command	lua/plugins/configs/bufferline.lua	/^    left_mouse_command = "buffer %d",    -- can be a string | function, see "Mouse actions"$/;"	f
map	lua/plugins/configs/gitsigns.lua	/^    local function map(mode, l, r, opts)$/;"	f
middle_mouse_command	lua/plugins/configs/bufferline.lua	/^    middle_mouse_command = nil,          -- can be a string | function, see "Mouse actions"$/;"	f
name_formatter	lua/plugins/configs/bufferline.lua	/^    name_formatter = function(buf)  -- buf contains a "name", "path" and "bufnr"$/;"	f
on_attach	lua/plugins/configs/gitsigns.lua	/^  on_attach = function(bufnr)$/;"	f
on_attach	lua/plugins/lspneovim.lua	/^		on_attach = function(client, bufnr)$/;"	f
right_mouse_command	lua/plugins/configs/bufferline.lua	/^    right_mouse_command = "bdelete! %d", -- can be a string | function, see "Mouse actions"$/;"	f
root_dir	lua/plugins/configs/lsp-config/configlsp.lua	/^    root_dir = function() return vim.loop.cwd() end$/;"	f
save_profiles	plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
sort_by	lua/plugins/configs/bufferline.lua	/^    sort_by = 'insert_after_current', function(buffer_a, buffer_b)$/;"	f
sumneko_lua	lua/plugins/lspneovim.lua	/^	sumneko_lua = function(opts)$/;"	f
time	plugin/packer_compiled.lua	/^    time = function(chunk, start) end$/;"	f
time	plugin/packer_compiled.lua	/^    time = function(chunk, start)$/;"	f
try_loadstring	plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
